#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
     if(root==nullptr)
      return {};
    vector<int>ans;
    queue<pair<BinaryTreeNode<int>*,int>>q;
    int vertical=0;
    q.push({root,vertical});
    map<int,int>mpp;
    while(!q.empty()){
        auto it =q.front();
        q.pop();
        BinaryTreeNode<int> *node=it.first;
        int vertical=it.second;
        mpp[vertical]=node->data;
        if(node->left) q.push({node->left,vertical-1});
        if(node->right) q.push({node->right,vertical+1});
        
    }
    for(auto it:mpp){
        ans.push_back(it.second);
    }
    return ans;
    
    
}
